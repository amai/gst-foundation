~~
~~ Copyright 2010 FatWire Corporation. All Rights Reserved.
~~
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~
~~    http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~

Installation Guide

  The minimal installation guide exists of these steps:


    [[1]] Download <<<gst-foundation-\<version\>.tgz>>> from  {{https://github.com/dolfdijkstra/gst-foundation/downloads/}}.

          Execute <<<tar xfz gst-foundation-*.tgz>>> or <<<unzip gst-foundation-*.zip>>> to explode the kit.
          
          Optionally download {{http://repo1.maven.org/maven2/org/tuckey/urlrewritefilter/3.2.0/urlrewritefilter-3.2.0.jar}} if you are not using webserver rewriting rules
          
          Download {{http://repo1.maven.org/maven2/javax/servlet/jstl/1.2/jstl-1.2.jar}} if your servlet engine does not come with jstl prepackaged. Tomcat6 needs this file for instance.
          
          Download {{http://repo1.maven.org/maven2/org/codehaus/groovy/groovy-all/1.7.10/groovy-all-1.7.10.jar}} for groovy support. Please check that there are no other (older) groovy versions in WEB-INF/lib or the classpath. Sites 11g comes with a groovy jar that does not work! It has class incompalibility issues with asm.
          
          The repo1.maven.org website has blocked traffic for wget based on their useragent string. To bypass this you can set the user-agent string manually, 
          add <-U downloader> to set the UserAgent header to downloader.  
          
         
          <<<wget -U downloader http://repo1.maven.org/maven2/org/tuckey/urlrewritefilter/3.2.0/urlrewritefilter-3.2.0.jar>>>
          
          <<<wget -U downloader http://repo1.maven.org/maven2/javax/servlet/jstl/1.2/jstl-1.2.jar>>>
          
          <<<wget -U downloader http://repo1.maven.org/maven2/org/codehaus/groovy/groovy-all/1.7.10/groovy-all-1.7.10.jar>>>
          

    [[2]] Deploy these downloaded jars and the gst-foundation-core-\<version\>.jar from the zip or tgz archive to cs/WEB-INF/lib.

    [[3]] Import the ElementCatalog and SiteCatalog with CatalogManager from gst-foundation-core-<XXX>-elements.zip}}:

    [[4]] For each CS environment, set the java startup system property <com.fatwire.gst.foundation.env-name> (i.e. in the  application server startup script). For example,

      <<<-Dcom.fatwire.gst.foundation.env-name=fatwire-dev>>>

    [[8]] Add the following lines to your web.xml and restart the application server.

--------------    
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	version="2.4"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

[...]

	<!-- the  HttpStatusHeaderFilter is used for http repsonse code support, it must also be deployed on Remote Satellite Server -->

	<filter>
		<filter-name>HttpStatusHeaderFilter</filter-name>
		<filter-class>com.fatwire.gst.foundation.httpstatus.HttpResponseStatusFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>HttpStatusHeaderFilter</filter-name>
		<servlet-name>Satellite</servlet-name>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>

[..]

</web-app>
--------------    


    [[4]] Login into Advanced UI with an xceladmin ACL enabled use, for instance fwadmin. Change to {{http://localhost:8080/cs/ContentServer?pagename=GST/Foundation/Installer}}. Follow the instructions on the page.

    
    [[6]] In ContentServer, create a Virtual Webroot (GSTVirtualWebroot) asset for each site. 

    The 'Environment Name' attribute must match the com.fatwire.gst.foundation.env-name property from step #5.

    [[7]] Configure a virtual host on Apache httpd server. This is the advised setup for production systems. A sample virtual host config file can be found here: {{./deploy/mydomain.conf.txt}}.

          Alternatively you can install and configure Tuckey URLRewrite. A complete sample urlrewrite.xml for a Content Server 7.6 JSK is avaiable for {{{./deploy/urlrewrite.xml}reference}} This sample
           assumes that two http ports are configured and that only traffic on port 8280 is rewritten. Normal editoral work is done on port 8180, GSF Preview is done on port 8280.
           

    [[9]] If you want to use Tuckey, add these lines to web.xml and restart the application server.

--------------    
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	version="2.4"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

[...]

        <!-- tuckey is only needed for deployment on a development, when no webserver with rewriting capabilities is available. -->

	<filter>
		<filter-name>UrlRewriteFilter</filter-name>
		<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
		<init-param>
			<param-name>confReloadCheckInterval</param-name>
			<param-value>0</param-value>
		</init-param>
		<init-param>
			<param-name>logLevel</param-name>
			<param-value>log4j</param-value>
		</init-param>
	</filter>

	<filter-mapping>
                <filter-name>UrlRewriteFilter</filter-name>
                 <url-pattern>/*</url-pattern> 
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping> 

[..]

</web-app>
--------------    
   
    [[10]] Read further instructions on how to use GSF. A good starter is the GSF Beginners Guide.
    
    [[11]] If you want to use Spring to congigure the Action framework, please check the {{./InstallGuide - Spring.html}}..
    
    
